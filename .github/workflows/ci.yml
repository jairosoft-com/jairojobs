name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  lint-and-type-check:
    name: Lint and Type Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Clear npm and Yarn caches
        run: |
          npm cache clean --force
          rm -rf node_modules
          rm -f package-lock.json
          yarn cache clean

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run ESLint
        run: yarn lint

      - name: Run TypeScript type check
        run: yarn type-check

  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    needs: lint-and-type-check
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Clear npm and Yarn caches
        run: |
          npm cache clean --force
          rm -rf node_modules
          rm -f package-lock.json
          yarn cache clean

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build application
        run: yarn build
        env:
          NEXT_PUBLIC_SITE_URL: https://jairojobs.com

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: .next/
          retention-days: 1

  lighthouse-ci:
    name: Lighthouse CI
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Clear npm and Yarn caches
        run: |
          npm cache clean --force
          rm -rf node_modules
          rm -f package-lock.json
          yarn cache clean

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build application
        run: yarn build

      - name: Run Lighthouse CI (Non-blocking)
        if: always()  # Always run this step, even if previous steps failed
        continue-on-error: true  # Don't fail the build on LHCI errors
        run: |
          echo 'Running Lighthouse CI in non-blocking mode...'
          yarn global add @lhci/cli@0.15.1
          # Run with --no-wait and --no-upload to prevent any blocking or uploads
          lhci autorun --no-wait --no-upload || echo 'LHCI checks completed with warnings'

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'